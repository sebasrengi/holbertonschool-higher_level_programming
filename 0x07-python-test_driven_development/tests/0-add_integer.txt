The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

Importing the function from the module:
	>>> add_integer = __import__("0-add_integer").add_integer
	

Checking regular addition:
	 >>> add_integer(2, 3)
	 5
Checking positive with negative:
         >>> add_integer(2, -3)
         -1
Checking negative with positive:
	 >>> add_integer(-2, 3)
	 1
Checking float with int:
	 >>> add_integer(2.1, 3)
	 5
Checking int with float:
	 >>> add_integer(2, 3.8)
	 5
Checking both float:
	 >>> add_integer(2.45, 3.1)
	 5
Checking number with non-number:
	 >>> add_integer(3, "2")
	 Traceback (most recent call last):
	 ...
	 TypeError: b must be an integer

Checking non-number with number:
	 >>> add_integer("3", 2)
	 Traceback (most recent call last):
	 ...
	 TypeError: a must be an integer

Checking non-number with non-number:
         >>> add_integer("3", "2")
         Traceback (most recent call last):
         ...
         TypeError: a must be an integer

Checking one arg:
	 >>> add_integer(1)
	 Traceback (most recent call last):
         ...
	 TypeError: add_integer() missing 1 required positional argument: 'b'

Checking more than 2 args:
	 >>> add_integer(1, 2, 3)
         Traceback (most recent call last):
         ...
         TypeError: add_integer() takes 2 positional arguments but 3 were given

Checking no args:
	 >>> add_integer()
	 Traceback (most recent call last):
	 ...
	 TypeError: add_integer() missing 2 required positional arguments: 'a' and 'b'
